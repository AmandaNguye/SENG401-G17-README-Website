{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vieta\\\\Documents\\\\Homework and Projects\\\\SENG 401\\\\Project\\\\client\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [failed, setFailed] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (data.token) {\n      localStorage.setItem(\"token\", data.token);\n      setFailed(false);\n      window.location.href = \"/dashboard\";\n    } else {\n      setFailed(true);\n    }\n  };\n\n  useEffect(() => {\n    const checkLoggedIn = () => {\n      fetch(\"http://localhost:5000/isUserAuth\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        }\n      }).then(res => res.json()).then(data => data.isLoggedIn ? navigate(\"/dashboard\") : null);\n    };\n\n    checkLoggedIn();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), failed && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"failed\",\n      children: \"Entered wrong username or password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"rWkCSHI40uJdcWrBuW1u8GwtS4w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/vieta/Documents/Homework and Projects/SENG 401/Project/client/src/components/Login/Login.js"],"names":["React","useEffect","useState","useNavigate","Login","username","setUsername","password","setPassword","failed","setFailed","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","token","localStorage","setItem","window","location","href","checkLoggedIn","getItem","then","res","isLoggedIn","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [failed, setFailed] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(\"http://localhost:5000/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (data.token) {\r\n      localStorage.setItem(\"token\", data.token);\r\n      setFailed(false);\r\n      window.location.href = \"/dashboard\";\r\n    } else {\r\n      setFailed(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkLoggedIn = () => {\r\n      fetch(\"http://localhost:5000/isUserAuth\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => (data.isLoggedIn ? navigate(\"/dashboard\") : null));\r\n    };\r\n    checkLoggedIn();\r\n  });\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <h1>Login</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <p>Username</p>\r\n        <input\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          type=\"text\"\r\n        />\r\n        <p>Password</p>\r\n        <input\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          type=\"password\"\r\n        />\r\n        <br />\r\n        <input className=\"button\" type=\"submit\" value=\"Login\" />\r\n      </form>\r\n      {failed && <p className=\"failed\">Entered wrong username or password</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}